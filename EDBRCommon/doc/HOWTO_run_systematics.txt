### How to run the electron and muon systematics

#1) Make sure you're in the right version of the code. If you're using the "old" PATtuple, 
#you must use an "old" version of the code. I had tag edbr_vv_20130410b if I remember correctly

#2) Go to our directory
cd $CMSSW_BASE/src/ExoDiBosonResonances/

#3) Update the smearing modules. DON'T UPDATE OTHER THINGS, or else you'll go to the "new" version of the code
cvs update -A EDBRElectron/BuildFile.xml EDBRElectron/src/PATElectronSmearProducer.cc EDBRElectron/src/PATElectronSmearProducer.h
cvs update -A EDBRMuon/BuildFile.xml EDBRMuon/src/PATMuonSmearProducer.cc EDBRMuon/src/PATMuonSmearProducer.h

#4) Update the configuration modules
cvs update -A EDBRCommon/prod/EDBR_ElectronSystematics_cfg.py
cvs update -A EDBRCommon/prod/EDBR_MuonSystematics_cfg.py

#5) Compile
scram b -j 8

### Now, the tricky thing. Those files, EDBR_ElectronSystematics_cfg.py and EDBR_Muon_Systematics_cfg.py
### are modifications of the EDBR_main_cfg.py files that I made. They have some additions in the end of
### the file that:
### a) Set up random numbers for smearing 
### b) Makes the files consider only signal
### c) Create a new module for smearing
### d) Change the modules and paths such that the smearing module is invoked
### So, you should put these additions to your own version of EDBR_main_cfg.py (or XWW_main_cfg.py).

### For completeness, I document here the options of the smearing module:

# src = cms.InputTag("patElectronsWithTrigger"), # Shouldn't change this!
# highPtRegion = cms.double(200.0),              # Objects with pt ABOVE this threshold will have the "extra" momentum scale applied
# momentumScale = cms.double(0.0),               # The regular momentum scale which you use for scaling smearing
# extraMomentumScale = cms.double(0.0),          # The "extra" momenum scale discussed above
# isScale = cms.bool(True),                      # If True, will do scaling. If False, will do smearing (randomly around a gaussian)
# isPositive = cms.bool(True),                   # If True, scale up. If false, scale down. If you're doing smearing instead of scaling, set True

### Some example setups are in the files. Running the files on the PATtuples give you the changed CMGtuples, 
### and from those you do the trees, histograms, etc.





### How to run Jet Energy Scale systematics
#1) Make sure that the tag that you are using is edbr_vv_20130523b or greater
#2) Open ExoDiBosonResonances/EDBRCommon/python/factories/cmgJet_cfi.py and in both cmgJet and structJetFactory change:
#   - applyScale to True
#   - nSigmaScale equal to the number of sigma that you want use to scale the jet energy. 

#Putting applyScale equal to False (that is the standard value that has this boolean) means that you are applying the nominal values of the JES
#Consider that nSigmaScale equal to 1.0 and -1.0 gives different results: you are scaling the jet energy of the JES nominal values plus or minus one sigma
#Consider also that nSigmaScale equal to 0.0 gives the same results as if applyScale is setted to false: this means that if you have nSigmaScale equal to 0.0 and applyScale equal to True at the same time, you are applying the nominal values of the JES

#3) Now you can run your analysis in order to produce the cmgTuples: in your cmgTuples the jets will have the energy scaled according to your setting





### How to run Jet Energy Resolution systematics
#1) Update the necessary files:
cvs update -A ExoDiBosonResonances/EDBRCommon/src/PFJetSmearFactory.cc
cvs update -A ExoDiBosonResonances/EDBRCommon/src/VJetFactory.cc
cvs update -A ExoDiBosonResonances/EDBRCommon/interface/PFJetSmearFactory.h
cvs update -A ExoDiBosonResonances/EDBRCommon/interface/VJetFactory.h
cvs update -A ExoDiBosonResonances/EDBRCommon/python/factories/cmgJet_cfi.py

#2) Open ExoDiBosonResonances/EDBRCommon/python/factories/cmgJet_cfi.py and in both cmgJet and structJetFactory change:
#   - applyResolution to True

#3) Now you can run your analysis in order to produce the cmgTuples: in your cmgTuples the jets will have the energy resolution smeared